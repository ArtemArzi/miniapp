// –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Auth Hook
import { useAuth } from '../contexts/AuthContext'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'

export function AuthTest() {
  const { 
    user, 
    isAuthenticated, 
    isLoading, 
    error, 
    hasError,
    isClient,
    isCoach,
    isAdmin,
    logout,
    clearError 
  } = useAuth()

  return (
    <Card className="max-w-2xl mx-auto m-4">
      <CardHeader>
        <CardTitle>üîê Auth Hook Test</CardTitle>
        <CardDescription>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        {/* –°—Ç–∞—Ç—É—Å */}
        <div>
          <h3 className="font-semibold mb-2">–°—Ç–∞—Ç—É—Å:</h3>
          <div className="flex gap-2 flex-wrap">
            <Badge variant={isAuthenticated ? "default" : "secondary"}>
              {isAuthenticated ? "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω" : "–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"}
            </Badge>
            {isLoading && <Badge variant="outline">–ó–∞–≥—Ä—É–∑–∫–∞...</Badge>}
            {hasError && <Badge variant="destructive">–û—à–∏–±–∫–∞</Badge>}
          </div>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        {user && (
          <div>
            <h3 className="font-semibold mb-2">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</h3>
            <div className="bg-gray-50 p-3 rounded-lg space-y-1">
              <p><strong>–ò–º—è:</strong> {user.name}</p>
              <p><strong>Email:</strong> {user.email}</p>
              <p><strong>–†–æ–ª—å:</strong> {user.role}</p>
              <p><strong>ID:</strong> {user.id}</p>
            </div>
          </div>
        )}

        {/* –†–æ–ª–∏ */}
        {isAuthenticated && (
          <div>
            <h3 className="font-semibold mb-2">–†–æ–ª–∏:</h3>
            <div className="flex gap-2">
              <Badge variant={isClient() ? "default" : "outline"}>–ö–ª–∏–µ–Ω—Ç</Badge>
              <Badge variant={isCoach() ? "default" : "outline"}>–¢—Ä–µ–Ω–µ—Ä</Badge>
              <Badge variant={isAdmin() ? "default" : "outline"}>–ê–¥–º–∏–Ω</Badge>
            </div>
          </div>
        )}

        {/* –û—à–∏–±–∫–∏ */}
        {error && (
          <div>
            <h3 className="font-semibold mb-2">–û—à–∏–±–∫–∞:</h3>
            <div className="bg-red-50 p-3 rounded-lg text-red-800">
              {error}
              <Button 
                size="sm" 
                variant="outline" 
                onClick={clearError}
                className="ml-2"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </Button>
            </div>
          </div>
        )}

        {/* –î–µ–π—Å—Ç–≤–∏—è */}
        {isAuthenticated && (
          <div>
            <Button variant="outline" onClick={logout}>
              –í—ã–π—Ç–∏
            </Button>
          </div>
        )}
      </CardContent>
    </Card>
  )
}

export default AuthTest
