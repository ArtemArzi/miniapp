/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å Telegram Bot –¥–ª—è Jaguar Fight Club
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ–º —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
 */

const TelegramBot = require('node-telegram-bot-api');
const { handleStart } = require('./handlers/start');
const { handleHelp } = require('./handlers/help');
const { handleApp } = require('./handlers/app');

class JaguarTelegramBot {
  constructor(token, options = {}) {
    this.token = token;
    this.options = {
      polling: {
        interval: 300,
        autoStart: true,
        params: {
          timeout: 10
        }
      },
      ...options
    };
    
    // –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    this.bot = new TelegramBot(this.token, this.options);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ polling
    this.bot.on('polling_error', (error) => {
      console.warn('‚ö†Ô∏è Telegram Bot polling error (non-fatal):', error.code || error.message);
      // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –Ω–µ –∫—Ä–∞—à–Ω—É—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    });
    
    this.bot.on('error', (error) => {
      console.warn('‚ö†Ô∏è Telegram Bot error (non-fatal):', error.message);
      // –õ–æ–≥–∏—Ä—É–µ–º, –Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–µ—Ä–≤–µ—Ä–∞
    });
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    this.setupCommands();
    
    console.log('ü§ñ Jaguar Telegram Bot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
   */
  setupCommands() {
    // –ö–æ–º–∞–Ω–¥–∞ /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∑–∞–ø—É—Å–∫ Mini App
    this.bot.onText(/\/start/, (msg) => handleStart(this.bot, msg));
    
    // –ö–æ–º–∞–Ω–¥–∞ /help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
    this.bot.onText(/\/help/, (msg) => handleHelp(this.bot, msg));
    
    // –ö–æ–º–∞–Ω–¥–∞ /app - –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    this.bot.onText(/\/app/, (msg) => handleApp(this.bot, msg));
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    this.bot.on('message', (msg) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏
      if (!msg.text || !msg.text.startsWith('/')) {
        return;
      }
      
      // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞
      const knownCommands = ['/start', '/help', '/app'];
      const command = msg.text.split(' ')[0];
      
      if (!knownCommands.includes(command)) {
        this.bot.sendMessage(msg.chat.id, 
          `‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${command}\n\n` +
          `–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
          `/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n` +
          `/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É\n` +
          `/app - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ`
        );
      }
    });
    
    console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è production
   */
  async setupWebhook(webhookUrl) {
    try {
      const result = await this.bot.setWebHook(webhookUrl);
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Menu Button –¥–ª—è Web App
      const miniAppUrl = process.env.MINI_APP_URL || 'https://beauty-bot-ai-bot-n8n.ru';
      await this.bot.setChatMenuButton({
        menu_button: {
          type: 'web_app',
          text: 'ü•ä –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
          web_app: {
            url: miniAppUrl
          }
        }
      });
      
      console.log('‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', webhookUrl);
      console.log('‚úÖ Menu Button –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', miniAppUrl);
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook:', error.message);
      throw error;
    }
  }

  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ webhook (–¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ polling)
   */
  async removeWebhook() {
    try {
      const result = await this.bot.deleteWebHook();
      console.log('‚úÖ Webhook —É–¥–∞–ª–µ–Ω');
      return result;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è webhook:', error.message);
      throw error;
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ update –æ—Ç webhook
   */
  processUpdate(update) {
    this.bot.processUpdate(update);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
   */
  async getBotInfo() {
    try {
      return await this.bot.getMe();
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:', error.message);
      throw error;
    }
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
   */
  stop() {
    if (this.options.polling) {
      this.bot.stopPolling();
    }
    console.log('üõë Telegram Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
}

module.exports = { JaguarTelegramBot };